import torch
import matplotlib.pyplot as plt
import numpy as np
from pytorch_complex_tensor import ComplexTensor
x = torch.linspace(0,50,500)
y = torch.cos(2*x)
y = y.view(1,500,1)
y = torch.cat((y,2*y,3*y))
print(y.size())
z = torch.sin(2*x)
z = z.view(1,500,1)
z = torch.cat((z,2*z,3*z))

constant = torch.tensor(0)
constant += 10
constant = torch.mean(10)
print(constant)
yz = torch.cat((y,z), dim=2)
print(yz.size())
# y = y.view(100,1)
# print(y.size())
# m = torch.tensor(y)
fft = torch.fft(yz,1)
modulus = torch.sqrt(fft[:,:,0]**2 + fft[:,:,1]**2)
print('fft', fft.size())
print('modulus' ,modulus.size())
modulus = modulus.detach().numpy()
print(modulus.shape)
y = y.detach().numpy()
z = z.detach().numpy()
plt.figure(1)
plt.plot(y[0,:,0])
plt.plot(z[0,:,0])
plt.plot(y[1,:,0])
plt.plot(z[1,:,0])
plt.figure(2)
plt.plot(modulus[0,:])
plt.plot(modulus[1,:])
plt.plot(modulus[2,:])
plt.show()